<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.
// ENVIRONMENT
int goal_x = 7; 
int goal_y = 9;

int env[11][11] = {
    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1},
    {1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1},
    {1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1},
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1},
    {1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
    {1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
};
</declaration>
	<template>
		<name x="5" y="5">Drone</name>
		<declaration>// Place local declarations here.
int x = 9; // ROW
int y = 1;  // COL

clock c;
int drone_state = 0;

void move(int dir_x, int dir_y) {
    x = x + dir_x;
    y = y + dir_y;
    drone_state = env[x][y];
}


int isValidMove(int dir_x, int dir_y) {
    return env[x+dir_x][y+dir_y];
}

int isValidMove_imp(int dir_x, int dir_y){
    if (dir_x &lt; 0){
        return env[x-1][y];
    } else if (dir_x &gt; 0) {
        return env[x+1][y];
    } else if (dir_y &lt; 0) {
        return env[x][y-1];
    } else {
        return env[x][y+1];
    }
}

int get_x() {
    return x;
}

int get_y() {
    return y;
}</declaration>
		<location id="id0" x="1428" y="229">
			<label kind="invariant" x="1445" y="204">c &lt;= 1</label>
		</location>
		<location id="id1" x="1428" y="-119">
			<name x="1386" y="-127">UP</name>
			<label kind="invariant" x="1454" y="-127">c &lt;= 1</label>
		</location>
		<location id="id2" x="1428" y="578">
			<name x="1368" y="569">DOWN</name>
			<label kind="invariant" x="1453" y="569">c &lt;= 1</label>
		</location>
		<location id="id3" x="1028" y="229">
			<name x="1011" y="187">LEFT</name>
			<label kind="invariant" x="1003" y="255">c &lt;= 1</label>
		</location>
		<location id="id4" x="1836" y="229">
			<name x="1811" y="187">RIGHT</name>
			<label kind="invariant" x="1811" y="255">c &lt;= 1</label>
		</location>
		<init ref="id0"/>
		<transition id="id5" controllable="false">
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="1912" y="204">y != get_y() &amp;&amp; c == 1</label>
			<label kind="assignment" x="1912" y="229">c = 0</label>
			<nail x="1895" y="263"/>
			<nail x="1895" y="195"/>
		</transition>
		<transition id="id6" controllable="false">
			<source ref="id3"/>
			<target ref="id3"/>
			<label kind="guard" x="756" y="212">y != get_y() &amp;&amp; c == 1</label>
			<label kind="assignment" x="909" y="238">c = 0</label>
			<nail x="968" y="263"/>
			<nail x="968" y="195"/>
		</transition>
		<transition id="id7" controllable="false">
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="guard" x="1547" y="280">y == get_y() &amp;&amp; c == 1</label>
			<label kind="assignment" x="1547" y="297">c = 0</label>
			<nail x="1751" y="272"/>
			<nail x="1513" y="272"/>
		</transition>
		<transition id="id8" controllable="false">
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="guard" x="1173" y="153">y == get_y() &amp;&amp; c == 1</label>
			<label kind="assignment" x="1173" y="136">c = 0</label>
			<nail x="1122" y="187"/>
			<nail x="1334" y="187"/>
		</transition>
		<transition id="id9">
			<source ref="id0"/>
			<target ref="id4"/>
			<label kind="guard" x="1547" y="195">isValidMove(0,1) != 1</label>
			<label kind="assignment" x="1547" y="153">move(0, 1),
c = 0</label>
		</transition>
		<transition id="id10">
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="guard" x="1122" y="246">isValidMove(0,-1) != 1</label>
			<label kind="assignment" x="1122" y="272">move(0, -1),
c = 0</label>
		</transition>
		<transition id="id11" controllable="false">
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="guard" x="1173" y="374">x == get_x() &amp;&amp; c == 1</label>
			<label kind="assignment" x="1317" y="399">c = 0</label>
			<nail x="1385" y="493"/>
			<nail x="1385" y="314"/>
		</transition>
		<transition id="id12">
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="1445" y="374">isValidMove(1,0) != 1</label>
			<label kind="assignment" x="1445" y="399">move(1, 0),
c = 0</label>
		</transition>
		<transition id="id13" controllable="false">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="1386" y="-204">x != get_x() &amp;&amp; c == 1</label>
			<label kind="assignment" x="1411" y="-221">c = 0</label>
			<nail x="1462" y="-178"/>
			<nail x="1394" y="-178"/>
		</transition>
		<transition id="id14">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="1215" y="17">isValidMove(-1,0) != 1</label>
			<label kind="assignment" x="1300" y="42">move(-1, 0),
c = 0</label>
		</transition>
		<transition id="id15" controllable="false">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="1487" y="17">x == get_x() &amp;&amp; c == 1</label>
			<label kind="assignment" x="1487" y="34">c = 0</label>
			<nail x="1470" y="-34"/>
			<nail x="1470" y="136"/>
		</transition>
		<transition id="id16" controllable="false">
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="guard" x="1385" y="646">x != get_x() &amp;&amp; c == 1</label>
			<label kind="assignment" x="1411" y="671">c = 0</label>
			<nail x="1394" y="638"/>
			<nail x="1462" y="638"/>
		</transition>
	</template>
	<template>
		<name>DroneSimple</name>
		<declaration>// Place local declarations here.
int x;
int y;

int check(){
    return env[-1][5];
}</declaration>
		<location id="id17" x="-34" y="-42">
		</location>
		<init ref="id17"/>
		<transition id="id18">
			<source ref="id17"/>
			<target ref="id17"/>
			<label kind="assignment" x="-85" y="-153">x = check()</label>
			<label kind="comments" x="-43" y="-110">UP</label>
			<nail x="-69" y="-127"/>
			<nail x="-1" y="-127"/>
		</transition>
		<transition id="id19">
			<source ref="id17"/>
			<target ref="id17"/>
			<label kind="assignment" x="-238" y="-51">x = check()</label>
			<label kind="comments" x="-127" y="-51">RIGHT</label>
			<nail x="-42" y="-42"/>
			<nail x="-136" y="-8"/>
			<nail x="-136" y="-76"/>
		</transition>
		<transition id="id20">
			<source ref="id17"/>
			<target ref="id17"/>
			<label kind="assignment" x="-76" y="51">x = check()</label>
			<label kind="comments" x="-51" y="8">DOWN</label>
			<nail x="0" y="42"/>
			<nail x="-68" y="42"/>
		</transition>
		<transition id="id21">
			<source ref="id17"/>
			<target ref="id17"/>
			<label kind="assignment" x="85" y="-51">x = check()</label>
			<label kind="comments" x="25" y="-51">LEFT</label>
			<nail x="68" y="-76"/>
			<nail x="68" y="-34"/>
			<nail x="68" y="-8"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
clock time;


// List one or more processes to be composed into a system.
system Drone;
</system>
	<queries>
		<option key="--diagnostic" value="-1"/>
		<query>
			<formula>// Stay safe, always eventually reach goal</formula>
			<comment/>
		</query>
		<query>
			<formula>strategy Safe = control: A[] Drone.drone_state != 1</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-12-10 19:08:14 +0100">
				<option key="--diagnostic" value="-1"/>
			</result>
		</query>
		<query>
			<formula>strategy Goal = control: A&lt;&gt; Drone.x == goal_x &amp;&amp; Drone.y == goal_y</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-12-10 19:55:18 +0100">
				<option key="--diagnostic" value="-1"/>
			</result>
		</query>
		<query>
			<formula/>
			<comment/>
		</query>
		<query>
			<formula>// Create strategy that minimizes time with regards to the above safe and goal strategies
</formula>
			<comment/>
		</query>
		<query>
			<formula>strategy FastSafe = minE(time) [&lt;=1000] : &lt;&gt; Drone.x == goal_x &amp;&amp; Drone.y == goal_y</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-12-11 09:10:02 +0100">
				<option key="--diagnostic" value="-1"/>
			</result>
		</query>
		<query>
			<formula>strategy FastSafe = minE(time) [&lt;=1000] : &lt;&gt; Drone.drone_state == 2</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-12-11 09:11:52 +0100">
				<option key="--diagnostic" value="-1"/>
			</result>
		</query>
	</queries>
</nta>
